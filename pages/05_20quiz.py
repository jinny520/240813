import streamlit as st
from PIL import Image

# Initialize session state to track progress and answers
if 'hint_index' not in st.session_state:
    st.session_state['hint_index'] = 0
    st.session_state['guesses'] = []
    st.session_state['game_over'] = False
    st.session_state['won'] = False

st.title("20 Hints Image Guessing Game ðŸ§ ")

# Display instructions
st.write("""
### Welcome to the 20 Hints Image Guessing Game!
Upload an image, and then guess what's in the image based on 20 hints. You have 20 chances to guess correctly.
""")

# Image upload
uploaded_file = st.file_uploader("Upload an image", type=["jpg", "jpeg", "png"])

# Placeholder for hints, which in a real-world application might be generated by a model
hints = [
    "It is a living thing.",
    "It is an animal.",
    "It has fur.",
    "It is a common pet.",
    "It is known to purr.",
    "It has a tail.",
    "It can be found indoors and outdoors.",
    "It has whiskers.",
    "It is smaller than a dog.",
    "It likes to chase mice.",
    "It can see well in the dark.",
    "It often climbs trees.",
    "It has sharp claws.",
    "It is often independent.",
    "It comes in many different breeds.",
    "It is known for its agility.",
    "It can land on its feet from a fall.",
    "It cleans itself by licking its fur.",
    "It can make a 'meow' sound.",
    "It is a common character in children's stories."
]

# Display the image and generate hints if an image is uploaded
if uploaded_file:
    image = Image.open(uploaded_file)
    st.image(image, caption="Uploaded Image", use_column_width=True)

    # Placeholder for the correct answer based on the image
    # In a real application, this could be generated using an AI model.
    # For this example, we hard-code the correct answer for simplicity.
    correct_answer = "cat"  # Example correct answer for demonstration

    # Display the current hint
    if st.session_state['hint_index'] < 20:
        st.write(f"### Hint {st.session_state['hint_index'] + 1}:")
        st.write(hints[st.session_state['hint_index']])

        # User input for their guess
        user_input = st.text_input("Your guess:", key=f"input_{st.session_state['hint_index']}")

        # Proceed to the next hint when the user submits their guess
        if st.button("Submit Guess"):
            st.session_state['guesses'].append(user_input)
            st.session_state['hint_index'] += 1

            # Check if the user guessed the correct answer
            if user_input.lower() == correct_answer.lower():
                st.session_state['won'] = True
                st.session_state['game_over'] = True
    else:
        st.session_state['game_over'] = True

    # Display game result
    if st.session_state['game_over']:
        if st.session_state['won']:
            st.success("Congratulations! You guessed it right!")
        else:
            st.error(f"Game over! The correct answer was: {correct_answer}")

    # Button to reset the game
    if st.button("Play Again"):
        st.session_state['hint_index'] = 0
        st.session_state['guesses'] = []
        st.session_state['game_over'] = False
        st.session_state['won'] = False

else:
    st.write("Please upload an image to start the game.")
